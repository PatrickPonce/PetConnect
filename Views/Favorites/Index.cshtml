@model PetConnect.ViewModels.FavoritosViewModel

@{
    ViewData["Title"] = "Mis Favoritos";
}

<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />

<style>
    .page-container { padding: 2rem 1rem; max-width: 1200px; margin: auto; }
    .page-title { text-align: center; font-size: 2.5rem; font-weight: bold; color: #fd8ba9; text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1); margin-bottom: 2rem; }
    .search-bar-container { display: flex; justify-content: center; margin-bottom: 3rem; }
    .search-form { display: flex; width: 100%; max-width: 500px; }
    .search-input { flex-grow: 1; padding: 0.8rem; border: 1px solid #ddd; border-radius: 8px 0 0 8px; }
    .search-button { padding: 0.8rem 1.2rem; border: none; background-color: #d67a7a; color: white; border-radius: 0 8px 8px 0; cursor: pointer; }
    .service-section h2 { font-size: 1.8rem; color: #333; border-bottom: 2px solid #fd8ba9; padding-bottom: 0.5rem; margin-top: 2rem; }
    .favorites-grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); gap: 2rem; margin-top: 2rem; }
    .lugar-card { position: relative; background-color: #fff; border-radius: 12px; box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); overflow: hidden; }
    .lugar-imagen { width: 100%; height: 220px; object-fit: cover; }
    .lugar-contenido { padding: 1.5rem; text-align: left; }
    .lugar-nombre { font-size: 1.5rem; font-weight: 600; color: #333; }
    .btn-ver-mas { display: block; margin-top: 1rem; padding: 0.75rem; background-color: #d67a7a; color: white; text-align: center; text-decoration: none; border-radius: 8px; }
    .remove-favorito-btn { position: absolute; top: 15px; right: 15px; background-color: #ffffff; border-radius: 50%; width: 45px; height: 45px; display: flex; justify-content: center; align-items: center; cursor: pointer; border: none; }
    .remove-favorito-btn .material-symbols-outlined { color: #e25e83; font-variation-settings: 'FILL' 1; }
</style>

<div class="page-container">
    <h1 class="page-title">Mis Favoritos</h1>

    <div class="search-bar-container">
        <form asp-action="Index" method="get" class="search-form">
            <input type="text" name="searchString" placeholder="Buscar en mis favoritos..." class="search-input" value="@Context.Request.Query["searchString"]" />
            <button type="submit" class="search-button">Buscar</button>
        </form>
    </div>

    @if (!Model.LugaresFavoritos.Any())
    {
        <p>No tienes lugares guardados que coincidan con tu búsqueda.</p>
    }

    @if (Model.LugaresFavoritos.Any())
    {
        <section class="service-section">
            <h2>Lugares Pet Friendly</h2>
            <div class="favorites-grid">
                @foreach (var lugar in Model.LugaresFavoritos)
                {
                    <div class="lugar-card" id="favorito-card-@lugar.Id">
                        <button class="remove-favorito-btn" data-id="@lugar.Id" title="Quitar de favoritos">
                            <span class="material-symbols-outlined">favorite</span>
                        </button>
                        <img src="@lugar.UrlImagenPrincipal" alt="Imagen de @lugar.Nombre" class="lugar-imagen" />
                        <div class="lugar-contenido">
                            <h3 class="lugar-nombre">@lugar.Nombre</h3>
                            <p>@lugar.Ubicacion</p>
                            <a asp-controller="Lugares" asp-action="Detalle" asp-route-id="@lugar.Id" class="btn-ver-mas">
                                Ver más detalles
                            </a>
                        </div>
                    </div>
                }
            </div>
        </section>
    }
</div>

@Html.AntiForgeryToken()

<script>
document.addEventListener('DOMContentLoaded', function() {
    const removeButtons = document.querySelectorAll('.remove-favorito-btn');

    removeButtons.forEach(btn => {
        btn.addEventListener('click', async function() {
            const lugarId = this.dataset.id;
            const card = document.getElementById(`favorito-card-${lugarId}`);
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            if (confirm('¿Estás seguro de que quieres quitar este lugar de tus favoritos?')) {
                try {
                    const response = await fetch('/Lugares/ToggleFavorito', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'RequestVerificationToken': token
                        },
                        body: `lugarId=${lugarId}`
                    });

                    const result = await response.json();
                    if (result.success && !result.agregado) {
                        card.style.transition = 'opacity 0.5s';
                        card.style.opacity = '0';
                        setTimeout(() => card.remove(), 500);
                    }
                } catch (error) {
                    console.error('Error al quitar favorito:', error);
                }
            }
        });
    });
});
</script>