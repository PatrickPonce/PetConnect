@model IEnumerable<PetConnect.Models.Noticia>

<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />

<style>
    /* Estilo del cuerpo de la página */
    body {
        background-color: #f7f3e8; /* Un color de fondo crema suave */
        font-family: 'Arial', sans-serif;
    }

    /* Estilos para el contenedor de la sección de noticias */
    .news-list-container {
        padding: 2rem 1rem;
        text-align: center;
    }

    .news-list-container h2 {
        font-size: 2.5rem;
        font-weight: bold;
        color: #FFCFCF;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
    }

    /* Estilos para el contenedor de las tarjetas */
    .news-cards-wrapper {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 2rem;
        margin-top: 2rem;
    }

    /* Estilos para cada tarjeta de noticia */
    .noticia-card {
        position: relative;
        background-color: #FFE2E2;
        border-radius: 12px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        width: 300px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .noticia-card:hover {
        transform: translateY(-8px);
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    }

    /* Estilos de la imagen de la noticia */
    .noticia-imagen {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    /* Estilos para el botón de favoritos */
    .favorito-btn {
        position: absolute;
        top: 15px;
        right: 15px;
        background-color: #ffffff;
        border: 1px solid #e0e0e0;
        border-radius: 50%;
        width: 45px;
        height: 45px;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .favorito-btn:hover {
        transform: scale(1.1);
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    }

    /* Estilos del ícono de Google Material Symbols */
    .favorito-btn .material-symbols-outlined {
        color: #a8798e;
        font-size: 1.4rem;
    }

    .favorito-btn.activo .material-symbols-outlined {
        color: #e25e83;
    }

    /* Estilos para el contenido de la tarjeta */
    .noticia-contenido {
        padding: 1.5rem;
        text-align: left;
    }

    .noticia-titulo {
        font-size: 1.4rem;
        font-weight: 600;
        color: #333;
        margin-bottom: 0.5rem;
    }

    .noticia-fecha {
        font-size: 0.9rem;
        color: #666;
        margin-bottom: 1rem;
    }

    .noticia-resumen {
        font-size: 1rem;
        color: #555;
        line-height: 1.5;
        margin-bottom: 1.5rem;
    }

    /* Estilos para el botón "Leer más" */
    .btn-leer-mas {
        display: inline-block;
        width: 100%;
        text-align: center;
        padding: 0.8rem;
        background-color: #72626e;
        color: white;
        text-decoration: none;
        border-radius: 8px;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

    .btn-leer-mas:hover {
        background-color: #5a4b56;
        transform: translateY(-2px);
    }

    /* --- ESTILOS PARA EL MODAL DE ALERTA --- */
    .modal-alerta {
        position: fixed;
        z-index: 1000; 
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.7);  
        display: none; 
        justify-content: center; 
        align-items: center;   
    }

    .modal-alerta-contenido {
        background-color: #fefefe; 
        margin: auto; 
        padding: 2.5rem; 
        border-radius: 12px;
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.3); 
        text-align: center;
        position: relative; 
        max-width: 450px;
        width: 90%; 
        box-sizing: border-box; 

    .modal-alerta-cerrar {
        position: absolute;
        top: 15px;
        right: 20px;
        color: #aaa;
        font-size: 1.8rem; 
        font-weight: normal;
        cursor: pointer;
        transition: color 0.2s;
    }

    .modal-alerta-cerrar:hover,
    .modal-alerta-cerrar:focus {
        color: #5a4b56; 
        text-decoration: none;
    }

    .modal-alerta-contenido h3 {
        color: #d67a7a; 
        font-size: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .modal-alerta-contenido p {
        font-size: 1.1rem;
        margin-bottom: 2rem;
        color: #5a4b56;
        line-height: 1.6;
    }

    .login-button-group {
        display: flex; 
        justify-content: center;
        gap: 15px; 
    }

    .login-button, .register-link {
        display: inline-block;
        padding: 1rem 2rem; 
        border-radius: 8px;
        font-weight: bold;
        text-decoration: none;
        transition: background-color 0.3s ease, transform 0.2s ease, color 0.3s ease, border-color 0.3s ease;
        border: 2px solid transparent; 
    }

    .login-button {
        background-color: #72626e;
        color: white;
        border-color: #72626e; 
    }

    .login-button:hover {
        background-color: #5a4b56;
        border-color: #5a4b56;
        transform: translateY(-1px);
    }

    .register-link {
        background-color: transparent; 
        color: #72626e;
        border-color: #72626e; 
    }

    .register-link:hover {
        background-color: #72626e; 
        color: white;
        transform: translateY(-1px);
    }

</style>

<div class="news-list-container">
    <h2>Noticias destacadas</h2>
    <div class="news-cards-wrapper">
        @foreach (var noticia in Model)
        {
            <div class="noticia-card">
                <img src="@noticia.UrlImagen" alt="@noticia.Titulo" class="noticia-imagen" />
                <div class="favorito-btn" data-id="@noticia.Id">
                    <span class="material-symbols-outlined">favorite</span>
                </div>
                <div class="noticia-contenido">
                    <h3 class="noticia-titulo">@noticia.Titulo</h3>
                    <p class="noticia-fecha">@noticia.FechaPublicacion.ToString("dd/MM/yyyy")</p>
                    
                    @{
                        // Eliminar las etiquetas <p> del resumen
                        string contenidoLimpio = noticia.Contenido.Replace("<p>", "").Replace("</p>", "");
                        string resumen;

                        if (contenidoLimpio.Length > 100)
                        {
                            resumen = contenidoLimpio.Substring(0, 100) + "...";
                        }
                        else
                        {
                            resumen = contenidoLimpio;
                        }
                    }
                    <p class="noticia-resumen">@resumen</p>
                    
                    <a href="@Url.Action("Detalle", "Noticias", new { id = noticia.Id })" class="btn-leer-mas">Leer más...</a>
                </div>
            </div>
        }
    </div>
</div>

<div id="modal-alerta" class="modal-alerta">
    <div class="modal-alerta-contenido">
        <span class="modal-alerta-cerrar">&times;</span>
        <h3>Acceso Requerido</h3>
        <p>¡Hola! Debes iniciar sesión o registrarte para comentar y guardar esta noticia en favoritos.</p>
        <div class="login-button-group">
            <a href="/Identity/Account/Login" class="login-button">Iniciar Sesión</a>
            <a href="/Identity/Account/Register" class="register-link">Registrarse</a>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const botonesFavoritos = document.querySelectorAll('.favorito-btn');
        const modal = document.getElementById('modal-alerta');
        const cerrarBtn = document.querySelector('.modal-alerta-cerrar');

        function mostrarModal() {
            modal.style.display = 'flex'; 
        }

        function ocultarModal() {
            modal.style.display = 'none';
        }

        botonesFavoritos.forEach(btn => {
            btn.addEventListener('click', mostrarModal);
        });

        if (cerrarBtn) {
            cerrarBtn.addEventListener('click', ocultarModal);
        }
        
        // Cierra el modal si se hace clic fuera de su contenido (en el overlay)
        window.onclick = function(event) {
            if (event.target == modal) {
                ocultarModal();
            }
        }
    });
</script>