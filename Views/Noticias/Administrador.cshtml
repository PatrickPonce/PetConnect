@using System.Text.RegularExpressions
@model IEnumerable<PetConnect.Models.Noticia>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager

@{
    ViewData["Title"] = "Gestión de Noticias";
    Layout = "_AdminLayout";
}

<style>
    .admin-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 2rem; }
    .admin-header h1 { color: #ff8fab; }
    .btn-crear { background-color: #72626e; color: white; padding: 0.8rem 1.5rem; text-decoration: none; border-radius: 8px; font-weight: bold; }
    .news-cards-wrapper { display: flex; flex-wrap: wrap; justify-content: center; gap: 2rem; }
    .noticia-card { background-color: #FFE2E2; border-radius: 12px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); width: 300px; }
    .noticia-imagen { width: 100%; height: 200px; object-fit: cover; border-top-left-radius: 12px; border-top-right-radius: 12px; }
    .noticia-contenido-admin { padding: 1.5rem; text-align: left; }
    .noticia-titulo-admin { font-size: 1.4rem; font-weight: 600; color: #333; margin-bottom: 0.5rem; }
    .noticia-fecha-admin { font-size: 0.9rem; color: #666; margin-bottom: 1rem; }
    .noticia-resumen-admin { font-size: 1rem; color: #555; line-height: 1.5; margin-bottom: 1.5rem; }
    .admin-actions a { display: block; text-align: center; padding: 0.6rem; margin-top: 0.5rem; border-radius: 8px; text-decoration: none; font-weight: bold; color: white; }
    .btn-leer-mas-admin { background-color: #a0a0a0; }
    .btn-editar-admin { background-color: #8B8B8B; }
    .btn-eliminar-admin { background-color: #d67a7a; }
    /* Estilo para la tarjeta cuando está fijada */
    .noticia-card.fijada {
        border: 3px solid #ff8fab; /* Borde rosa para destacar */
        background-color: #fffafb; /* Fondo ligeramente rosado */
    }

    /* Estilo para el nuevo botón */
    .btn-fijar-admin {
        background-color: #6c757d; /* Gris */
    }

    /* Estilo del botón cuando SÍ está fijada */
    .noticia-card.fijada .btn-fijar-admin {
        background-color: #ff8fab; /* Rosa */
    }
</style>

<div class="admin-header">
    <h1>Gestión de Noticias</h1>
    <a asp-action="Crear" class="btn-crear">Crear</a>
</div>

@Html.AntiForgeryToken()
<div class="news-cards-wrapper">
    @foreach (var item in Model)
    {
        <div class="noticia-card @(item.EsFijada ? "fijada" : "")" id="noticia-card-@item.Id">
        <img src="@item.UrlImagen" alt="@item.Titulo" class="noticia-imagen" />
            <div class="noticia-contenido-admin">
                <div class="admin-actions">
                    <a asp-action="Detalle" asp-route-id="@item.Id" class="btn-leer-mas-admin">Leer más...</a>
                    <a asp-action="Editar" asp-route-id="@item.Id" class="btn-editar-admin">Editar</a>
                    <a asp-action="Eliminar" asp-route-id="@item.Id" class="btn-eliminar-admin">Eliminar</a>
                    
                    <a href="#" class="btn-fijar-admin" data-id="@item.Id" title="Fijar/Quitar Noticia">
                        <span class="material-symbols-outlined" style="vertical-align: middle;">push_pin</span>
                        Fijar
                    </a>
                    </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        // Obtenemos el token
        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

        document.querySelectorAll('.btn-fijar-admin').forEach(button => {
            button.addEventListener('click', async function(e) {
                e.preventDefault(); // Evita que el enlace '#' navegue

                const noticiaId = this.dataset.id;
                const card = document.getElementById(`noticia-card-${noticiaId}`);

                try {
                    const response = await fetch(`/Noticias/AlternarFijado/${noticiaId}`, {
                        method: 'POST',
                        headers: {
                            // Enviamos el token en la cabecera
                            'RequestVerificationToken': token 
                        }
                    });

                    if (response.ok) {
                        const data = await response.json();
                        if (data.success) {
                            // Actualiza el estilo de la tarjeta
                            card.classList.toggle('fijada', data.esFijada);
                            
                            // Opcional: Recargar la página para ver el nuevo orden al instante
                            // location.reload();
                        } else {
                            alert('Error: ' + data.message);
                        }
                    } else {
                        alert('Error de red al intentar fijar la noticia.');
                    }
                } catch (error) {
                    console.error('Error en fetch al fijar:', error);
                }
            });
        });
    });
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}