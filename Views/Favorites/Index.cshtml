@model PetConnect.ViewModels.FavoritosViewModel

@{
    ViewData["Title"] = "Mis Favoritos";
}

<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />

<style>
    body { background-color: #FFF6F6; }
    .page-container { padding: 2rem 1rem; max-width: 1200px; margin: auto; }
    .page-title { text-align: center; font-size: 2.8rem; font-weight: bold; color: #ff8fab; text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.05); margin-bottom: 2.5rem; }
    .search-bar-container { display: flex; justify-content: center; margin-bottom: 3.5rem; }
    .search-form { display: flex; width: 100%; max-width: 600px; background-color: white; border-radius: 50px; padding: 8px; box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08); }
    .search-input { flex-grow: 1; padding: 0.5rem 1rem; border: none; outline: none; background: transparent; font-size: 1rem; }
    .search-button { padding: 0.6rem 1.8rem; border:    none; background-color: #ff8fab; color: white; border-radius: 50px; cursor: pointer; font-weight: bold; transition: background-color 0.3s; }
    .search-button:hover { background-color: #f87aa0; }
    .service-section h2 { font-size: 1.8rem; color: #333; border-bottom: 2px solid #ffc2d1; padding-bottom: 0.5rem; margin-top: 2rem; }
    .favorites-grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); gap: 2rem; margin-top: 2rem; }
    .item-card { position: relative; background-color: #fff; border-radius: 12px; box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08); overflow: hidden; transition: transform 0.2s; }
    .item-card:hover { transform: translateY(-5px); }
    .item-imagen { width: 100%; height: 220px; object-fit: cover; }
    .item-contenido { padding: 1.5rem; text-align: left; }
    .item-nombre { font-size: 1.5rem; font-weight: 600; color: #333; }
    .btn-ver-mas { display: block; margin-top: 1rem; padding: 0.75rem; background-color: #d67a7a; color: white; text-align: center; text-decoration: none; border-radius: 8px; }
    .remove-favorito-btn { position: absolute; top: 15px; right: 15px; background-color: rgba(255, 255, 255, 0.8); backdrop-filter: blur(5px); border-radius: 50%; width: 45px; height: 45px; display: flex; justify-content: center; align-items: center; cursor: pointer; border: none; }
    .remove-favorito-btn .material-symbols-outlined { color: #e25e83; font-variation-settings: 'FILL' 1; }
    .empty-favorites-container { text-align: center; padding: 4rem 1rem; }
    .empty-favorites-container h2 { font-size: 1.8rem; color: #555; margin-bottom: 1rem; }
    .empty-favorites-container p { font-size: 1.2rem; color: #777; margin-bottom: 2rem; }
    .empty-favorites-container .explore-button { display: inline-block; padding: 1rem 2.5rem; background-color: #ff8fab; color: white; text-decoration: none; font-weight: bold; border-radius: 50px; transition: background-color 0.3s; }
    .empty-favorites-container .explore-button:hover { background-color: #f87aa0; }
</style>

<div class="page-container">
    <h1 class="page-title">Mis Favoritos</h1>

    @{
        // <!-- CAMBIO AQUÍ 1: Añadimos la comprobación de PetShops -->
        var hasAnyFavorites = Model.LugaresFavoritos.Any() || Model.GuarderiasFavoritas.Any() || Model.NoticiasFavoritas.Any() || Model.PetShopsFavoritos.Any();
        var searchString = Context.Request.Query["searchString"];
        var hasSearchResults = Model.LugaresFavoritos.Any() || Model.GuarderiasFavoritas.Any() || Model.NoticiasFavoritas.Any() || Model.PetShopsFavoritos.Any();
    }

    @if (hasAnyFavorites || !string.IsNullOrEmpty(searchString))
    {
        <div class="search-bar-container">
            <form asp-action="Index" method="get" class="search-form">
                <input type="text" name="searchString" placeholder="Buscar en mis favoritos..." class="search-input" value="@searchString" />
                <button type="submit" class="search-button">Buscar</button>
            </form>
        </div>
    }

    @if (hasAnyFavorites)
    {
        @if (Model.LugaresFavoritos.Any())
        {
            <section class="service-section">
                <h2>Lugares Pet Friendly</h2>
                <div class="favorites-grid">
                    @foreach (var lugar in Model.LugaresFavoritos)
                    {
                        <div class="item-card" id="favorito-lugar-@lugar.Id">
                            <button class="remove-favorito-btn" data-type="lugar" data-id="@lugar.Id" title="Quitar de favoritos">
                                <span class="material-symbols-outlined">favorite</span>
                            </button>
                            <img src="@lugar.UrlImagenPrincipal" alt="Imagen de @lugar.Nombre" class="item-imagen" />
                            <div class="item-contenido">
                                <h3 class="item-nombre">@lugar.Nombre</h3>
                                <p>@lugar.Ubicacion</p>
                                <a asp-controller="Lugares" asp-action="Detalle" asp-route-id="@lugar.Id" class="btn-ver-mas">Ver más detalles</a>
                            </div>
                        </div>
                    }
                </div>
            </section>
        }

        @if (Model.GuarderiasFavoritas.Any())
        {
            <section class="service-section">
                <h2>Guarderías</h2>
                <div class="favorites-grid">
                    @foreach (var guarderia in Model.GuarderiasFavoritas)
                    {
                        <div class="item-card" id="favorito-guarderia-@guarderia.Id">
                            <button class="remove-favorito-btn" data-type="guarderia" data-id="@guarderia.Id" title="Quitar de favoritos">
                                <span class="material-symbols-outlined">favorite</span>
                            </button>
                            <img src="@guarderia.UrlImagenPrincipal" alt="Imagen de @guarderia.Nombre" class="item-imagen" />
                            <div class="item-contenido">
                                <h3 class="item-nombre">@guarderia.Nombre</h3>
                                <p>@guarderia.Ubicacion</p>
                                <a asp-controller="Guarderias" asp-action="Detalle" asp-route-id="@guarderia.Id" class="btn-ver-mas">Ver más detalles</a>
                            </div>
                        </div>
                    }
                </div>
            </section>
        }

        <!-- ============================================== -->
        <!-- CAMBIO AQUÍ 2: SECCIÓN AÑADIDA PARA PET SHOPS  -->
        <!-- ============================================== -->
        @if (Model.PetShopsFavoritos.Any())
        {
            <section class="service-section">
                <h2>Pet Shops</h2>
                <div class="favorites-grid">
                    @foreach (var petshop in Model.PetShopsFavoritos)
                    {
                        <div class="item-card" id="favorito-petshop-@petshop.Id">
                            <button class="remove-favorito-btn" data-type="petshop" data-id="@petshop.Id" title="Quitar de favoritos">
                                <span class="material-symbols-outlined">favorite</span>
                            </button>
                            <img src="@petshop.UrlImagenPrincipal" alt="Imagen de @petshop.Nombre" class="item-imagen" />
                            <div class="item-contenido">
                                <h3 class="item-nombre">@petshop.Nombre</h3>
                                <p>@petshop.Ubicacion</p>
                                <a asp-controller="PetShops" asp-action="Detalle" asp-route-id="@petshop.Id" class="btn-ver-mas">Ver más detalles</a>
                            </div>
                        </div>
                    }
                </div>
            </section>
        }
        
        @if (Model.NoticiasFavoritas.Any())
        {
            <section class="service-section">
                <h2>Noticias</h2>
                <div class="favorites-grid">
                    @foreach (var noticia in Model.NoticiasFavoritas)
                    {
                        <div class="item-card" id="favorito-noticia-@noticia.Id">
                            <button class="remove-favorito-btn" data-type="noticia" data-id="@noticia.Id" title="Quitar de favoritos">
                                <span class="material-symbols-outlined">favorite</span>
                            </button>
                            <img src="@noticia.UrlImagen" alt="Imagen de @noticia.Titulo" class="item-imagen" />
                            <div class="item-contenido">
                                <h3 class="item-nombre">@noticia.Titulo</h3>
                                <p>@noticia.FechaPublicacion.ToString("dd/MM/yyyy")</p>
                                <a asp-controller="Noticias" asp-action="Detalle" asp-route-id="@noticia.Id" class="btn-ver-mas">Leer más...</a>
                            </div>
                        </div>
                    }
                </div>
            </section>
        }

        @if (!hasSearchResults && !string.IsNullOrEmpty(searchString))
        {
            <p style="text-align: center;">No tienes favoritos guardados que coincidan con tu búsqueda.</p>
        }
    }
    else
    {
        <div class="empty-favorites-container">
            <h2>Tu lista de favoritos está vacía</h2>
            <p>¡Guarda los mejores lugares y servicios para tenerlos siempre a la mano!</p>
            <a asp-controller="Home" asp-action="Index" class="explore-button">Explorar Servicios</a>
        </div>
    }
</div>

@Html.AntiForgeryToken()

<script>
document.addEventListener('DOMContentLoaded', function() {
    const removeButtons = document.querySelectorAll('.remove-favorito-btn');

    removeButtons.forEach(btn => {
        btn.addEventListener('click', async function() {
            const id = this.dataset.id;
            const type = this.dataset.type;
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
            
            let url = '';
            let body = '';

            if (type === 'lugar') {
                url = '/Lugares/ToggleFavorito';
                body = `lugarId=${id}`;
            } else if (type === 'guarderia') {
                url = '/Guarderias/ToggleFavorito';
                body = `guarderiaId=${id}`;
            } 
            // <!-- CAMBIO AQUÍ 3: AÑADIMOS LA CONDICIÓN PARA PETSHOP -->
            else if (type === 'petshop') {
                url = '/PetShops/ToggleFavorito';
                body = `petShopId=${id}`;
            } 
            else if (type === 'noticia') {
                url = '/Noticias/ToggleFavorito';
                body = `noticiaId=${id}`;
            } else {
                console.error('Tipo de favorito desconocido:', type);
                return;
            }

            if (confirm('¿Estás seguro de que quieres quitar este favorito?')) {
                try {
                    const response = await fetch(url, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'RequestVerificationToken': token
                        },
                        body: body
                    });

                    const result = await response.json();
                    if (result.success && !result.agregado) {
                        const card = document.getElementById(`favorito-${type}-${id}`);
                        if(card) {
                            card.style.transition = 'opacity 0.5s, transform 0.5s';
                            card.style.opacity = '0';
                            card.style.transform = 'scale(0.9)';
                            setTimeout(() => {
                                card.remove();
                                if(document.querySelectorAll('.item-card').length === 0) {
                                    window.location.reload();
                                }
                            }, 500);
                        }
                    } else {
                        alert("Hubo un error al intentar quitar el favorito.");
                    }
                } catch (error) {
                    console.error('Error al quitar favorito:', error);
                }
            }
        });
    });
});
</script>