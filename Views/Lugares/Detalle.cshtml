@model PetConnect.Models.LugarPetFriendly

@{
    ViewData["Title"] = Model.Nombre;
}

<!-- Dependencia para los iconos de Font Awesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />

<style>
    body {
        background-color: #FFFDEC; /* Fondo crema general */
    }

    /* --- ESTILOS CLAVE PARA EL LAYOUT DE DOS COLUMNAS --- */
    .lugar-detalle-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 1rem;
        
        /* ESTO ES LO MÁS IMPORTANTE: Activa Flexbox */
        display: flex;
        
        /* Permite que la barra lateral caiga debajo en pantallas pequeñas */
        flex-wrap: wrap; 
        
        /* Espacio entre el contenido principal y la barra lateral */
        gap: 2.5rem; 
    }

    .main-content {
        /* La columna principal tomará 3 partes del espacio disponible */
        flex: 3;
        min-width: 300px;
        background-color: #FAF6F0; /* Fondo ligeramente rosado/crema para el contenido */
        padding: 2rem;
        border-radius: 8px;
    }

    .contact-sidebar {
        /* La barra lateral tomará 1 parte del espacio */
        flex: 1;
        background-color: #ffffff; /* Fondo blanco como en la imagen */
        padding: 1.5rem;
        border-radius: 12px;
        height: fit-content; /* Se ajusta a la altura de su contenido */
        border: 1px solid #eee;
        box-shadow: 0 4px 15px rgba(0,0,0,0.05); /* Sombra sutil */
    }
    /* --- FIN DE ESTILOS DE LAYOUT --- */


    .lugar-header {
        display: flex;
        align-items: center;
        gap: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .lugar-logo {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        object-fit: cover;
        border: 4px solid #fff;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    .lugar-title-info h1 {
        margin: 0;
        font-size: 2.5rem;
        color: #333;
    }

    .lugar-title-info p {
        margin: 0.2rem 0;
        color: #555;
        font-size: 1rem;
    }

    .rating-stars .fa-star { color: #ffc107; }
    .rating-stars .fa-star.empty { color: #e0e0e0; }

    .banner-container { margin: 1.5rem 0; }
    .banner-image { width: 100%; border-radius: 8px; }

    .tabs-wrapper { margin-top: 2rem; }
    .tabs-container { border-bottom: 1px solid #ddd; margin-bottom: 1.5rem; display: flex; flex-wrap: wrap; }
    .tab-button {
        padding: 0.8rem 1rem;
        border: none;
        background: none;
        cursor: pointer;
        font-size: 0.9rem;
        margin-right: 1rem;
        border-bottom: 3px solid transparent;
        color: #555;
        display: flex;
        align-items: center;
        gap: 8px;
    }
    .tab-button.active {
        border-bottom-color: #d67a7a;
        font-weight: bold;
        color: #333;
    }
    .tab-content { display: none; padding: 1rem 0; }
    .tab-content.active { display: block; }
    .tab-content h3 { font-size: 1.5rem; margin-top: 0; }

    .contact-sidebar h3 {
        border-bottom: 2px solid #d67a7a;
        padding-bottom: 0.5rem;
        margin-bottom: 1rem;
    }
    .contact-sidebar ul { list-style: none; padding: 0; }
    .contact-sidebar li { margin-bottom: 1rem; display: flex; align-items: center; }
    .contact-sidebar li i { margin-right: 10px; width: 20px; text-align: center; color: #d67a7a; }
    .contact-sidebar a { text-decoration: none; color: #333; }
    .contact-sidebar a:hover { text-decoration: underline; }

    .btn-contactar {
        display: block;
        width: 100%;
        padding: 1rem;
        background-color: #d17a7a;
        color: white;
        text-align: center;
        text-decoration: none;
        border-radius: 8px;
        margin-top: 1.5rem;
        font-weight: bold;
        transition: background-color 0.3s;
    }
    .btn-contactar:hover { background-color: #c96868; }

    /* Estilos de Comentarios */
    .comentarios-container { margin-top: 1rem; }
    .form-comentario textarea { width: 100%; height: 80px; padding: 0.75rem; border-radius: 8px; border: 1px solid #ccc; }
    .form-comentario button { margin-top: 1rem; padding: 0.5rem 1rem; background-color: #72626e; color: white; border: none; border-radius: 8px; cursor: pointer; }

    /* Estilos del Modal */
    .modal-overlay { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.6); display: none; justify-content: center; align-items: center; z-index: 2000; }
    .modal-content { background-color: #FFFDEC; padding: 2.5rem; border-radius: 12px; box-shadow: 0 5px 20px rgba(0,0,0,0.2); text-align: center; position: relative; max-width: 400px; width: 90%; }
    .close-button { position: absolute; top: 10px; right: 15px; font-size: 1.8rem; font-weight: 300; cursor: pointer; color: #888; }
    .modal-body h3 { color: #333; font-size: 1.8rem; margin: 0 0 1rem 0; font-weight: 600; }
    .modal-body p { font-size: 1rem; margin-bottom: 2rem; color: #555; }
    .modal-login-button { display: block; width: 100%; padding: 1rem; background-color: #e57373; color: white; text-decoration: none; border: none; border-radius: 50px; font-weight: bold; font-size: 1rem; margin-bottom: 1rem; transition: background-color 0.3s; }
    .modal-register-link { color: #6a1b9a; text-decoration: underline; font-weight: 500; }
</style>

<div class="lugar-detalle-container">

    <!-- Columna Principal (Izquierda) -->
    <main class="main-content">
        <header class="lugar-header">
            @if (!string.IsNullOrEmpty(Model.UrlLogo))
            { <img src="@Model.UrlLogo" alt="Logo de @Model.Nombre" class="lugar-logo" /> }
            <div class="lugar-title-info">
                <h1>@Model.Nombre</h1>
                <p><i class="fas fa-map-marker-alt"></i> @Model.DireccionCompleta</p>
                <div class="rating-stars">
                    @for (int i = 1; i <= 5; i++)
                    {
                        if (i <= Model.Calificacion) { <i class="fas fa-star"></i> }
                        else if (i - 0.5 <= Model.Calificacion) { <i class="fas fa-star-half-alt"></i> }
                        else { <i class="fas fa-star empty"></i> }
                    }
                </div>
            </div>
        </header>

        <div class="banner-container">
            <img src="@Url.Content("~/img/banner_manada_365.png")" alt="Banner Manada 365" class="banner-image" />
        </div>

        <div class="tabs-wrapper">
            <div class="tabs-container">
                <button class="tab-button active" data-tab="descripcion"><i class="fas fa-paw"></i> Descripción</button>
                <button class="tab-button" data-tab="comentarios"><i class="fas fa-comments"></i> Comentarios</button>
                <button class="tab-button" data-tab="galeria"><i class="fas fa-images"></i> Galería</button>
                <button class="tab-button" data-tab="ubicacion"><i class="fas fa-map-marked-alt"></i> Ubicación</button>
            </div>

            <div id="descripcion" class="tab-content active">
                <h3>@Model.Nombre - @Model.Categoria</h3>
                <p>@Html.Raw(Model.Descripcion)</p>
            </div>

            <div id="comentarios" class="tab-content">
                 <section class="comentarios-container">
                     <h3>Opiniones de la comunidad</h3>
                     @if (Model.Comentarios != null && Model.Comentarios.Any())
                     {
                         foreach (var comentario in Model.Comentarios.OrderByDescending(c => c.FechaComentario))
                         {
                             <div class="comentario">
                                 <p class="comentario-autor">@(comentario.Usuario?.UserName ?? "Anónimo")</p>
                                 <p class="comentario-texto">@comentario.Texto</p>
                                 <p class="comentario-fecha">@comentario.FechaComentario.ToString("g")</p>
                             </div>
                         }
                     }
                     else { <p>Aún no hay comentarios. ¡Sé el primero en compartir tu experiencia!</p> }
                     
                     <div class="form-comentario">
                         <label for="textoComentario">Deja tu comentario</label>
                         <textarea id="textoComentario" name="textoComentario" required placeholder="Escribe tu opinión aquí..."></textarea>
                         <button id="comentar-btn" type="button">Comentar</button>
                     </div>
                 </section>
            </div>

            <div id="galeria" class="tab-content">
                <p>Galería de imágenes próximamente...</p>
            </div>

            <div id="ubicacion" class="tab-content">
                <p>Mapa de ubicación próximamente...</p>
            </div>
        </div>
    </main>

    <!-- Sidebar de Contacto (Derecha) -->
    <aside class="contact-sidebar">
        <h3>Contacto</h3>
        <ul>
            @if (!string.IsNullOrEmpty(Model.Telefono))
            { <li><i class="fab fa-whatsapp"></i> <a href="https://wa.me/@Model.Telefono.Replace(" ", "")" target="_blank">@Model.Telefono</a></li> }
            @if (!string.IsNullOrEmpty(Model.UrlFacebook))
            { <li><i class="fab fa-facebook"></i> <a href="@Model.UrlFacebook" target="_blank">Facebook</a></li> }
            @if (!string.IsNullOrEmpty(Model.UrlInstagram))
            { <li><i class="fab fa-instagram"></i> <a href="@Model.UrlInstagram" target="_blank">Instagram</a></li> }
            <li><i class="fas fa-map-marker-alt"></i> @Model.DireccionCompleta</li>
            <li><i class="fas fa-location-arrow"></i> @Model.Ubicacion</li>
        </ul>
        @if (!string.IsNullOrEmpty(Model.Telefono))
        { <a href="https://wa.me/@Model.Telefono.Replace(" ", "")" target="_blank" class="btn-contactar">Contáctanos <i class="fab fa-whatsapp"></i></a> }
    </aside>
</div>

<!-- Modal de Acceso Requerido -->
<div id="login-modal" class="modal-overlay">
    <div class="modal-content">
        <span class="close-button">&times;</span>
        <div class="modal-body">
            <h3>Acceso Requerido</h3>
            <p>¡Hola! Debes iniciar sesión o registrarte para poder comentar.</p>
            <a href="/Identity/Account/Login" class="modal-login-button">Iniciar Sesión</a>
            <a href="/Identity/Account/Register" class="modal-register-link">Registrarse</a>
        </div>
    </div>
</div>

@Html.AntiForgeryToken()

<script>
// El script se mantiene igual, ya estaba correcto.
document.addEventListener('DOMContentLoaded', function () {

    const usuarioHaIniciadoSesion = @User.Identity.IsAuthenticated.ToString().ToLower() === 'true';
    const loginModal = document.getElementById('login-modal');

    // Lógica para cambiar de pestaña (Tabs)
    const tabs = document.querySelectorAll('.tab-button');
    const tabContents = document.querySelectorAll('.tab-content');
    tabs.forEach(tab => {
        tab.addEventListener('click', () => {
            tabs.forEach(t => t.classList.remove('active'));
            tabContents.forEach(c => c.classList.remove('active'));
            tab.classList.add('active');
            const activeContent = document.getElementById(tab.dataset.tab);
            if (activeContent) {
                activeContent.classList.add('active');
            }
        });
    });

    // Lógica para el botón de comentar
    const comentarBtn = document.getElementById('comentar-btn');
    if (comentarBtn) {
        comentarBtn.addEventListener('click', async function() {
            if (!usuarioHaIniciadoSesion) {
                if (loginModal) {
                    loginModal.style.display = 'flex';
                }
                return; 
            }

            const textoInput = document.getElementById('textoComentario');
            const texto = textoInput.value;
            const lugarId = @Model.Id;

            if (!texto.trim()) {
                alert('Por favor, escribe un comentario.');
                return;
            }

            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            try {
                const response = await fetch('/Lugares/AgregarComentario', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded', 'RequestVerificationToken': token },
                    body: `lugarId=${lugarId}&textoComentario=${encodeURIComponent(texto)}`
                });
                const result = await response.json();
                if (result.success) {
                    alert('¡Gracias por tu comentario!');
                    location.reload();
                } else {
                    alert('Error: ' + result.message);
                }
            } catch (error) {
                console.error('Error al enviar el comentario:', error);
                alert('Ocurrió un error inesperado al intentar comentar.');
            }
        });
    }

    // Lógica para cerrar el modal
    if (loginModal) {
        const closeButton = loginModal.querySelector('.close-button');
        if (closeButton) {
            closeButton.addEventListener('click', () => {
                loginModal.style.display = 'none';
            });
        }
        window.addEventListener('click', (event) => {
            if (event.target === loginModal) {
                loginModal.style.display = 'none';
            }
        });
    }
});
</script>