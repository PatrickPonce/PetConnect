@model IEnumerable<PetConnect.Models.Noticia>
@using Microsoft.AspNetCore.Identity
@using System.Text.RegularExpressions
@inject SignInManager<IdentityUser> SignInManager

<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />

<style>
    /* Estilos para el contenedor de las tarjetas */
    .news-cards-wrapper {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 2rem;
        margin-top: 2rem;
    }

    /* Estilos para cada tarjeta de noticia */
    .noticia-card {
        position: relative;
        background-color: #FFE2E2;
        border-radius: 12px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        width: 300px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        
        display: flex; 
        flex-direction: column; 
        min-height: 480px; 
        box-sizing: border-box;
    }

    .noticia-card:hover {
        transform: translateY(-8px);
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    }

    /* Estilos de la imagen de la noticia */
    .noticia-imagen {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    /* Estilos para el botón de favoritos */
    .favorito-btn {
        position: absolute;
        top: 15px;
        right: 15px;
        background-color: #ffffff;
        border: 1px solid #e0e0e0;
        border-radius: 50%;
        width: 45px;
        height: 45px;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .favorito-btn:hover {
        transform: scale(1.1);
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    }

    /* Estilos del ícono de Google Material Symbols */
    .favorito-btn .material-symbols-outlined {
        color: #a8798e;
        font-size: 1.4rem;
        /* Estilo para que se vea solo el borde por defecto */
        font-variation-settings: 'FILL' 0; 
    }

    .favorito-btn.activo .material-symbols-outlined {
        color: #e25e83; /* Color de relleno */
        font-variation-settings: 'FILL' 1; /* Rellena el ícono */
    }

    /* Estilos para el contenido de la tarjeta */
    .noticia-contenido {
        padding: 1.5rem;
        text-align: left;
        display: flex;
        flex-direction: column;
        flex-grow: 1;
        justify-content: space-between;
    }

    .noticia-titulo {
        font-size: 1.4rem;
        font-weight: 600;
        color: #333;
        margin-bottom: 0.5rem;
    }

    .noticia-fecha {
        font-size: 0.9rem;
        color: #666;
        margin-bottom: 1rem;
    }

    .noticia-resumen {
        font-size: 1rem;
        color: #555;
        line-height: 1.5;
        margin-bottom: 1.5rem;
        flex-grow: 1;
    }
        /* Estilos para el botón "Leer más" */
    .btn-leer-mas {
        align-self: center; 
        padding: 0.6rem 3.5rem;
        font-size: 1.1rem;      
        border-radius: 50px; 
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        
        background-color: #72626e;
        color: white;
        text-decoration: none;
        transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease;
        margin-top: auto;
        line-height: 1.5;
        text-align: center;
    }

    .btn-leer-mas:hover {
        background-color: #5a4b56;
        transform: translateY(-3px);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
    }

    /* --- ESTILOS MEJORADOS PARA EL MODAL DE ALERTA --- */
    .modal-alerta {
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.7);
        display: none;
        justify-content: center;
        align-items: center;
    }

    .modal-alerta-contenido {
        background-color: #fefefe;
        padding: 2.5rem;
        border-radius: 12px;
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.3);
        text-align: center;
        position: relative;
        max-width: 450px;
        width: 90%;
        box-sizing: border-box;
    }

    .modal-alerta-cerrar {
        position: absolute;
        top: 15px;
        right: 20px;
        color: #aaa;
        font-size: 1.8rem;
        font-weight: bold;
        cursor: pointer;
        transition: color 0.2s;
    }

    .modal-alerta-cerrar:hover,
    .modal-alerta-cerrar:focus {
        color: #5a4b56;
        text-decoration: none;
    }

    .modal-alerta-contenido h3 {
        color: #d67a7a;
        font-size: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .modal-alerta-contenido p {
        font-size: 1.1rem;
        margin-bottom: 2rem;
        color: #5a4b56;
        line-height: 1.6;
    }

/* Contenedor de los botones */

    .login-button-group {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 15px;
        width: 100%;
        max-width: 350px;
        margin: 0 auto;
    }

    /* Ambos botones iguales */
    .login-button, 
    .register-link {
        flex: 1; 
        display: flex;               
        justify-content: center;
        align-items: center;
        height: 50px;
        border-radius: 8px;
        font-weight: bold;
        text-decoration: none;
        border: 2px solid #72626e;
        box-sizing: border-box;
        transition: all 0.3s ease;
        font-size: 1rem;
        cursor: pointer;
    }

    /* Botón Iniciar Sesión */
    .login-button {
        background-color: #72626e;
        color: white;
    }

    /* Botón Registrarse */
    .register-link {
        background-color: transparent;
        color: #72626e;
    }

    /* Hover */
    .login-button:hover {
        background-color: #5a4b56;
        border-color: #5a4b56;
        transform: translateY(-2px);
    }

    .register-link:hover {
        background-color: #72626e;
        color: white;
        transform: translateY(-2px);
    }
</style>

@foreach (var noticia in Model)
{
    <div class="noticia-card">
        <img src="@noticia.UrlImagen" alt="@noticia.Titulo" class="noticia-imagen" />
        
        <div class="favorito-btn" data-id="@noticia.Id">
            <span class="material-symbols-outlined">favorite</span>
        </div>
        
        <div class="noticia-contenido">
            <h3 class="noticia-titulo">@noticia.Titulo</h3>
            <p class="noticia-fecha">@noticia.FechaPublicacion.ToString("dd/MM/yyyy")</p>
            
            @{
                // Eliminar las etiquetas <p> del resumen
                string contenidoLimpio = Regex.Replace(noticia.Contenido, "<.*?>", String.Empty);
                string resumen;

                if (contenidoLimpio.Length > 100)
                {
                    resumen = contenidoLimpio.Substring(0, 100) + "...";
                }
                else
                {
                    resumen = contenidoLimpio;
                }
            }
            <p class="noticia-resumen">@Html.Raw(resumen)</p>
            
            <a href="@Url.Action("Detalle", "Noticias", new { id = noticia.Id })" class="btn-leer-mas">Leer más...</a>
        </div>
    </div>
}

<div id="modal-alerta" class="modal-alerta">
    <div class="modal-alerta-contenido">
        <span class="modal-alerta-cerrar">&times;</span>
        <h3>Acceso Requerido</h3>
        <p>¡Hola! Debes iniciar sesión o registrarte para guardar esta noticia en favoritos.</p>
        <div class="login-button-group">
            <a href="/Identity/Account/Login" class="login-button">Iniciar Sesión</a>
            <a href="/Identity/Account/Register" class="register-link">Registrarse</a>
        </div>
    </div>
</div>

<script>
    if (!window.favoritoScriptCargado) {
        window.favoritoScriptCargado = true;

        document.addEventListener('DOMContentLoaded', function() {
            const modal = document.getElementById('modal-alerta');
            const cerrarBtn = document.querySelector('.modal-alerta-cerrar');

            if (cerrarBtn) {
                cerrarBtn.addEventListener('click', ocultarModal);
            }
            window.onclick = function(event) {
                if (event.target == modal) {
                    ocultarModal();
                }
            }
        });

        function mostrarModal() {
            const modal = document.getElementById('modal-alerta');
            if (modal) modal.style.display = 'flex';
        }
        function ocultarModal() {
            const modal = document.getElementById('modal-alerta');
            if (modal) modal.style.display = 'none';
        }
        
        // Función para manejar el clic en favoritos
        function manejarClicFavorito(event) {
            event.preventDefault();
            const botonActual = event.currentTarget; // 'currentTarget' es más seguro
            const usuarioAutenticado = @SignInManager.IsSignedIn(User).ToString().ToLower();
            console.log('Estado de autenticación detectado:', usuarioAutenticado);
            
            if (usuarioAutenticado === true) {
                const noticiaId = botonActual.dataset.id;
                const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value;

                if (!token) {
                    console.error('Error: No se encontró el AntiForgeryToken.');
                    return;
                }

                fetch('/Noticias/ToggleFavorito', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': token
                    },
                    body: JSON.stringify(parseInt(noticiaId))
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        botonActual.classList.toggle('activo', data.esFavorito);
                    }
                })
                .catch(error => console.error('Error en fetch:', error));

            } else {
                mostrarModal();
            }
        }

        // Delegación de eventos: Escuchamos clics en el contenedor
        // Esto es MÁS EFICIENTE y funciona aunque se añadan nuevas tarjetas
        document.addEventListener('click', function(event) {
            // Verificamos si el clic fue en un botón de favorito o en un hijo
            const boton = event.target.closest('.favorito-btn');
            if (boton) {
                manejarClicFavorito(event);
            }
        });
    }
</script>